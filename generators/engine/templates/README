= <%= engine_class_name %>

<%= engine_class_name %> is a ...

== Installation

1. Create your Rails application, set up your databases, grab the Engines plugin and the <%= engine_class_name %>, and install them.

2. Install the <%= engine_class_name %> into your vendor/plugins directory

3. Modify your Engines.start call in config/environment.rb

    Engines.start :<%= engine_start_name %>

4. Edit your application.rb file so it looks something like the following:

    class ApplicationController < ActionController::Base
      include <%= engine_class_name %>
    end

5. Edit your application_helper.rb file:

    module ApplicationHelper
      include <%= engine_class_name %>
    end

6. Perform any configuration you might need. You'll probably want to set these values in environment.rb (before the call to Engines.start):

    module <%= engine_class_name %>
      config :some_option, "some_value"
    end

7. Initialize the database tables. You can either use the engine migrations by calling:

    rake engine_migrate

  to move all engines to their latest versions, or

    rake engine_migrate ENGINE=<%= engine_start_name %>

  to migrate only this engine.

8. The <%= engine_class_name %> provides a default stylesheet and a small javascript helper file, so you'll probably want to include the former and almost certainly the latter in your application's layout. Add the following lines:

      <%%= engine_stylesheet "<%=engine_start_name%>_engine" %>
      <%%= engine_javascript "<%=engine_start_name%>_engine" %>

== Configuration

A number of configuration parameters are available to allow to you control
how the data is stored, should you be unhappy with the defaults. These are
outlined below. 

  module <%= engine_class_name %>
    config :some_option, "some_value"
  end

=== Configuration Options
+some_option+:: This option will set some_value 

== Usage
How to use this engine

== License
<%= license %>
